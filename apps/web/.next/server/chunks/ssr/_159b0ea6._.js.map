{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/adam/Dev/magic-template/apps/web/src/app/opengraph-image.tsx"],"sourcesContent":["import { ImageResponse } from \"next/og\";\n\nexport const runtime = \"edge\";\nexport const alt = \"Magic UI\";\nexport const size = {\n  width: 1200,\n  height: 630,\n};\nexport const contentType = \"image/png\";\n\nconst getAssetData = async () => {\n  try {\n    const baseUrl = process.env.NEXT_PUBLIC_SITE_URL;\n\n    const fontUrls = {\n      clashDisplay: `${baseUrl}/fonts/ClashDisplay-Semibold.ttf`,\n      cabinetGrotesk: `${baseUrl}/fonts/CabinetGrotesk-Medium.ttf`,\n      logo: `${baseUrl}/magicui-logo.png`,\n    };\n\n    const [clashDisplayRes, cabinetGroteskRes, logoRes] = await Promise.all([\n      fetch(fontUrls.clashDisplay),\n      fetch(fontUrls.cabinetGrotesk),\n      fetch(fontUrls.logo),\n    ]);\n\n    if (!clashDisplayRes.ok || !cabinetGroteskRes.ok || !logoRes.ok) {\n      return null;\n    }\n\n    const [clashDisplay, cabinetGrotesk, logoImage] = await Promise.all([\n      clashDisplayRes.arrayBuffer(),\n      cabinetGroteskRes.arrayBuffer(),\n      logoRes.arrayBuffer(),\n    ]);\n\n    const logoBase64 = `data:image/png;base64,${Buffer.from(logoImage).toString(\n      \"base64\"\n    )}`;\n\n    return {\n      clashDisplay,\n      cabinetGrotesk,\n      logoBase64,\n    };\n  } catch (error) {\n    console.error(\"Failed to load assets:\", error);\n    return null;\n  }\n};\n\nconst styles = {\n  wrapper: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    padding: \"40px\",\n  },\n  container: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"4px solid black\",\n    padding: \"60px\",\n  },\n  title: {\n    fontSize: \"64px\",\n    color: \"black\",\n    marginBottom: \"10px\",\n    textAlign: \"center\",\n    fontFamily: \"Clash Display\",\n    letterSpacing: \"0.5px\",\n  },\n  description: {\n    fontSize: \"28px\",\n    color: \"black\",\n    textAlign: \"center\",\n    maxWidth: \"800px\",\n    fontFamily: \"Clash Display\",\n    letterSpacing: \"0.5px\",\n    border: \"3px solid black\",\n    padding: \"10px 15px\",\n    borderRadius: \"100px\",\n  },\n} as const;\n\nexport default async function Image() {\n  try {\n    const assetData = await getAssetData();\n\n    return new ImageResponse(\n      (\n        <div\n          style={{\n            ...styles.wrapper,\n            fontFamily: assetData ? \"Clash Display\" : \"system-ui\",\n          }}\n        >\n          <div style={styles.container}>\n            <img\n              src={\n                assetData?.logoBase64 ||\n                `${process.env.NEXT_PUBLIC_SITE_URL}/magicui-logo.png`\n              }\n              alt=\"MagicUI Logo\"\n              width={100}\n              height={100}\n            />\n            <h1 style={styles.title}>Magic UI</h1>\n            <p style={styles.description}>\n              Beautiful UI components for modern web applications.\n            </p>\n          </div>\n        </div>\n      ),\n      {\n        ...size,\n        fonts: assetData\n          ? [\n              {\n                name: \"Clash Display\",\n                data: assetData.clashDisplay,\n                weight: 500,\n                style: \"normal\",\n              },\n              {\n                name: \"Cabinet Grotesk\",\n                data: assetData.cabinetGrotesk,\n                weight: 500,\n                style: \"normal\",\n              },\n            ]\n          : undefined,\n      }\n    );\n  } catch (error) {\n    console.error(\"Error generating image:\", error);\n    return new Response(\n      `Failed to generate image: ${\n        error instanceof Error ? error.message : \"Unknown error\"\n      }`,\n      {\n        status: 500,\n      }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;;;AAEO,MAAM,UAAU;AAChB,MAAM,MAAM;AACZ,MAAM,OAAO;IAClB,OAAO;IACP,QAAQ;AACV;AACO,MAAM,cAAc;AAE3B,MAAM,eAAe;IACnB,IAAI;QACF,MAAM,UAAU,QAAQ,GAAG,CAAC,oBAAoB;QAEhD,MAAM,WAAW;YACf,cAAc,GAAG,QAAQ,gCAAgC,CAAC;YAC1D,gBAAgB,GAAG,QAAQ,gCAAgC,CAAC;YAC5D,MAAM,GAAG,QAAQ,iBAAiB,CAAC;QACrC;QAEA,MAAM,CAAC,iBAAiB,mBAAmB,QAAQ,GAAG,MAAM,QAAQ,GAAG,CAAC;YACtE,MAAM,SAAS,YAAY;YAC3B,MAAM,SAAS,cAAc;YAC7B,MAAM,SAAS,IAAI;SACpB;QAED,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE;YAC/D,OAAO;QACT;QAEA,MAAM,CAAC,cAAc,gBAAgB,UAAU,GAAG,MAAM,QAAQ,GAAG,CAAC;YAClE,gBAAgB,WAAW;YAC3B,kBAAkB,WAAW;YAC7B,QAAQ,WAAW;SACpB;QAED,MAAM,aAAa,CAAC,sBAAsB,EAAE,OAAO,IAAI,CAAC,WAAW,QAAQ,CACzE,WACC;QAEH,OAAO;YACL;YACA;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;IACT;AACF;AAEA,MAAM,SAAS;IACb,SAAS;QACP,QAAQ;QACR,OAAO;QACP,SAAS;QACT,eAAe;QACf,YAAY;QACZ,gBAAgB;QAChB,iBAAiB;QACjB,SAAS;IACX;IACA,WAAW;QACT,QAAQ;QACR,OAAO;QACP,SAAS;QACT,eAAe;QACf,YAAY;QACZ,gBAAgB;QAChB,QAAQ;QACR,SAAS;IACX;IACA,OAAO;QACL,UAAU;QACV,OAAO;QACP,cAAc;QACd,WAAW;QACX,YAAY;QACZ,eAAe;IACjB;IACA,aAAa;QACX,UAAU;QACV,OAAO;QACP,WAAW;QACX,UAAU;QACV,YAAY;QACZ,eAAe;QACf,QAAQ;QACR,SAAS;QACT,cAAc;IAChB;AACF;AAEe,eAAe;IAC5B,IAAI;QACF,MAAM,YAAY,MAAM;QAExB,OAAO,IAAI,kUAAA,CAAA,gBAAa,eAEpB,sbAAC;YACC,OAAO;gBACL,GAAG,OAAO,OAAO;gBACjB,YAAY,YAAY,kBAAkB;YAC5C;sBAEA,cAAA,sbAAC;gBAAI,OAAO,OAAO,SAAS;;kCAC1B,sbAAC;wBACC,KACE,WAAW,cACX,GAAG,QAAQ,GAAG,CAAC,oBAAoB,CAAC,iBAAiB,CAAC;wBAExD,KAAI;wBACJ,OAAO;wBACP,QAAQ;;;;;;kCAEV,sbAAC;wBAAG,OAAO,OAAO,KAAK;kCAAE;;;;;;kCACzB,sbAAC;wBAAE,OAAO,OAAO,WAAW;kCAAE;;;;;;;;;;;;;;;;kBAMpC;YACE,GAAG,IAAI;YACP,OAAO,YACH;gBACE;oBACE,MAAM;oBACN,MAAM,UAAU,YAAY;oBAC5B,QAAQ;oBACR,OAAO;gBACT;gBACA;oBACE,MAAM;oBACN,MAAM,UAAU,cAAc;oBAC9B,QAAQ;oBACR,OAAO;gBACT;aACD,GACD;QACN;IAEJ,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,IAAI,SACT,CAAC,0BAA0B,EACzB,iBAAiB,QAAQ,MAAM,OAAO,GAAG,iBACzC,EACF;YACE,QAAQ;QACV;IAEJ;AACF","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///home/adam/Dev/magic-template/apps/web/src/app/opengraph-image--metadata.js"],"sourcesContent":["import { alt, contentType, runtime, size } from \"./opengraph-image.tsx\"\nimport { fillMetadataSegment } from 'next/dist/lib/metadata/get-metadata-route'\n\nconst imageModule = { alt, contentType, runtime, size }\n\nexport default async function (props) {\n    const { __metadata_id__: _, ...params } = await props.params\n    const imageUrl = fillMetadataSegment(\"/\", params, \"opengraph-image\")\n\n    const { generateImageMetadata } = imageModule\n\n    function getImageMetadata(imageMetadata, idParam) {\n        const data = {\n            alt: imageMetadata.alt,\n            type: imageMetadata.contentType || 'image/png',\n            url: imageUrl + (idParam ? ('/' + idParam) : '') + \"?ccb0ec7bfd411fef\",\n        }\n        const { size } = imageMetadata\n        if (size) {\n            data.width = size.width; data.height = size.height;\n        }\n        return data\n    }\n\n    if (generateImageMetadata) {\n        const imageMetadataArray = await generateImageMetadata({ params })\n        return imageMetadataArray.map((imageMetadata, index) => {\n            const idParam = (imageMetadata.id || index) + ''\n            return getImageMetadata(imageMetadata, idParam)\n        })\n    } else {\n        return [getImageMetadata(imageModule, '')]\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,cAAc;IAAE,KAAA,gJAAA,CAAA,MAAG;IAAE,aAAA,gJAAA,CAAA,cAAW;IAAE,SAAA,gJAAA,CAAA,UAAO;IAAE,MAAA,gJAAA,CAAA,OAAI;AAAC;AAEvC,8CAAgB,KAAK;IAChC,MAAM,EAAE,iBAAiB,CAAC,EAAE,GAAG,QAAQ,GAAG,MAAM,MAAM,MAAM;IAC5D,MAAM,WAAW,CAAA,GAAA,mXAAA,CAAA,sBAAmB,AAAD,EAAE,KAAK,QAAQ;IAElD,MAAM,EAAE,qBAAqB,EAAE,GAAG;IAElC,SAAS,iBAAiB,aAAa,EAAE,OAAO;QAC5C,MAAM,OAAO;YACT,KAAK,cAAc,GAAG;YACtB,MAAM,cAAc,WAAW,IAAI;YACnC,KAAK,WAAW,CAAC,UAAW,MAAM,UAAW,EAAE,IAAI;QACvD;QACA,MAAM,EAAE,IAAI,EAAE,GAAG;QACjB,IAAI,MAAM;YACN,KAAK,KAAK,GAAG,KAAK,KAAK;YAAE,KAAK,MAAM,GAAG,KAAK,MAAM;QACtD;QACA,OAAO;IACX;IAEA,IAAI,uBAAuB;QACvB,MAAM,qBAAqB,MAAM,sBAAsB;YAAE;QAAO;QAChE,OAAO,mBAAmB,GAAG,CAAC,CAAC,eAAe;YAC1C,MAAM,UAAU,CAAC,cAAc,EAAE,IAAI,KAAK,IAAI;YAC9C,OAAO,iBAAiB,eAAe;QAC3C;IACJ,OAAO;QACH,OAAO;YAAC,iBAAiB,aAAa;SAAI;IAC9C;AACJ","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///home/adam/Dev/magic-template/node_modules/.pnpm/next%4015.3.5_%40babel%2Bcore%407.28.4_%40playwright%2Btest%401.55.0_react-dom%4019.1.1_react%4019.1.1__react%4019.1.1/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,kPAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///home/adam/Dev/magic-template/node_modules/.pnpm/next%4015.3.5_%40babel%2Bcore%407.28.4_%40playwright%2Btest%401.55.0_react-dom%4019.1.1_react%4019.1.1__react%4019.1.1/node_modules/next/src/server/og/image-response.ts"],"sourcesContent":["type OgModule = typeof import('next/dist/compiled/@vercel/og')\n\nfunction importModule(): Promise<\n  typeof import('next/dist/compiled/@vercel/og')\n> {\n  return import(\n    process.env.NEXT_RUNTIME === 'edge'\n      ? 'next/dist/compiled/@vercel/og/index.edge.js'\n      : 'next/dist/compiled/@vercel/og/index.node.js'\n  )\n}\n\n/**\n * The ImageResponse class allows you to generate dynamic images using JSX and CSS.\n * This is useful for generating social media images such as Open Graph images, Twitter cards, and more.\n *\n * Read more: [Next.js Docs: `ImageResponse`](https://nextjs.org/docs/app/api-reference/functions/image-response)\n */\nexport class ImageResponse extends Response {\n  public static displayName = 'ImageResponse'\n  constructor(...args: ConstructorParameters<OgModule['ImageResponse']>) {\n    const readable = new ReadableStream({\n      async start(controller) {\n        const OGImageResponse: typeof import('next/dist/compiled/@vercel/og').ImageResponse =\n          // So far we have to manually determine which build to use,\n          // as the auto resolving is not working\n          (await importModule()).ImageResponse\n        const imageResponse = new OGImageResponse(...args) as Response\n\n        if (!imageResponse.body) {\n          return controller.close()\n        }\n\n        const reader = imageResponse.body!.getReader()\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) {\n            return controller.close()\n          }\n          controller.enqueue(value)\n        }\n      },\n    })\n\n    const options = args[1] || {}\n\n    const headers = new Headers({\n      'content-type': 'image/png',\n      'cache-control':\n        process.env.NODE_ENV === 'development'\n          ? 'no-cache, no-store'\n          : 'public, immutable, no-transform, max-age=31536000',\n    })\n    if (options.headers) {\n      const newHeaders = new Headers(options.headers)\n      newHeaders.forEach((value, key) => headers.set(key, value))\n    }\n    super(readable, {\n      headers,\n      status: options.status,\n      statusText: options.statusText,\n    })\n  }\n}\n"],"names":["ImageResponse","importModule","process","env","NEXT_RUNTIME","Response","displayName","constructor","args","readable","ReadableStream","start","controller","OGImageResponse","imageResponse","body","close","reader","getReader","done","value","read","enqueue","options","headers","Headers","NODE_ENV","newHeaders","forEach","key","set","status","statusText"],"mappings":";;;;+BAkBaA,iBAAAA;;;eAAAA;;;AAhBb,SAASC;IAGP,OAAO,MAAM,CACXC,QAAQC,GAAG,CAACC,YAAY,KAAK,SACzB,gDACA;AAER;AAQO,MAAMJ,sBAAsBK;qBACnBC,WAAAA,GAAc,gBAAA;IAC5BC,YAAY,GAAGC,IAAsD,CAAE;QACrE,MAAMC,WAAW,IAAIC,eAAe;YAClC,MAAMC,OAAMC,UAAU;gBACpB,MAAMC,kBAGJ,AAFA,AACA,uCAAuC,oBADoB;gBAE1D,CAAA,MAAMZ,cAAa,EAAGD,aAAa;gBACtC,MAAMc,gBAAgB,IAAID,mBAAmBL;gBAE7C,IAAI,CAACM,cAAcC,IAAI,EAAE;oBACvB,OAAOH,WAAWI,KAAK;gBACzB;gBAEA,MAAMC,SAASH,cAAcC,IAAI,CAAEG,SAAS;gBAC5C,MAAO,KAAM;oBACX,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAE,GAAG,MAAMH,OAAOI,IAAI;oBACzC,IAAIF,MAAM;wBACR,OAAOP,WAAWI,KAAK;oBACzB;oBACAJ,WAAWU,OAAO,CAACF;gBACrB;YACF;QACF;QAEA,MAAMG,UAAUf,IAAI,CAAC,EAAE,IAAI,CAAC;QAE5B,MAAMgB,UAAU,IAAIC,QAAQ;YAC1B,gBAAgB;YAChB,iBACEvB,QAAQC,GAAG,CAACuB,QAAQ,KAAK,cACrB,uBACA;QACR;QACA,IAAIH,QAAQC,OAAO,EAAE;YACnB,MAAMG,aAAa,IAAIF,QAAQF,QAAQC,OAAO;YAC9CG,WAAWC,OAAO,CAAC,CAACR,OAAOS,MAAQL,QAAQM,GAAG,CAACD,KAAKT;QACtD;QACA,KAAK,CAACX,UAAU;YACde;YACAO,QAAQR,QAAQQ,MAAM;YACtBC,YAAYT,QAAQS,UAAU;QAChC;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///home/adam/Dev/magic-template/node_modules/.pnpm/next%4015.3.5_%40babel%2Bcore%407.28.4_%40playwright%2Btest%401.55.0_react-dom%4019.1.1_react%4019.1.1__react%4019.1.1/node_modules/next/og.js"],"sourcesContent":["module.exports = require('./dist/server/og/image-response')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}
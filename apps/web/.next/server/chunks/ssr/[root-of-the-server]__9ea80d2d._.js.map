{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/adam/Dev/magic-template/packages/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/src/lib/utils\"\n\nfunction TooltipProvider({\n  delayDuration = 0,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Provider>) {\n  return (\n    <TooltipPrimitive.Provider\n      data-slot=\"tooltip-provider\"\n      delayDuration={delayDuration}\n      {...props}\n    />\n  )\n}\n\nfunction Tooltip({\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Root>) {\n  return (\n    <TooltipProvider>\n      <TooltipPrimitive.Root data-slot=\"tooltip\" {...props} />\n    </TooltipProvider>\n  )\n}\n\nfunction TooltipTrigger({\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Trigger>) {\n  return <TooltipPrimitive.Trigger data-slot=\"tooltip-trigger\" {...props} />\n}\n\nfunction TooltipContent({\n  className,\n  sideOffset = 0,\n  children,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Content>) {\n  return (\n    <TooltipPrimitive.Portal>\n      <TooltipPrimitive.Content\n        data-slot=\"tooltip-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-primary text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-fit origin-(--radix-tooltip-content-transform-origin) rounded-md px-3 py-1.5 text-xs text-balance\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <TooltipPrimitive.Arrow className=\"bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]\" />\n      </TooltipPrimitive.Content>\n    </TooltipPrimitive.Portal>\n  )\n}\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAGA;;;;;;AAHA;;;;AAOA,SAAS,gBAAgB,EACvB,gBAAgB,CAAC,EACjB,GAAG,OACoD;IACvD,qBACE,sbAAC,0XAAA,CAAA,WAAyB;QACxB,aAAU;QACV,eAAe;QACd,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,QAAQ,EACf,GAAG,OACgD;IACnD,qBACE,sbAAC;kBACC,cAAA,sbAAC,0XAAA,CAAA,OAAqB;YAAC,aAAU;YAAW,GAAG,KAAK;;;;;;;;;;;AAG1D;AAEA,SAAS,eAAe,EACtB,GAAG,OACmD;IACtD,qBAAO,sbAAC,0XAAA,CAAA,UAAwB;QAAC,aAAU;QAAmB,GAAG,KAAK;;;;;;AACxE;AAEA,SAAS,eAAe,EACtB,SAAS,EACT,aAAa,CAAC,EACd,QAAQ,EACR,GAAG,OACmD;IACtD,qBACE,sbAAC,0XAAA,CAAA,SAAuB;kBACtB,cAAA,sbAAC,0XAAA,CAAA,UAAwB;YACvB,aAAU;YACV,YAAY;YACZ,WAAW,GACT,0aACA;YAED,GAAG,KAAK;;gBAER;8BACD,sbAAC,0XAAA,CAAA,QAAsB;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI1C","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///home/adam/Dev/magic-template/packages/components/magicui/flickering-grid.tsx"],"sourcesContent":["\"use client\";\n\nimport { cn } from \"@/src/lib/utils\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\ninterface FlickeringGridProps extends React.HTMLAttributes<HTMLDivElement> {\n  squareSize?: number;\n  gridGap?: number;\n  flickerChance?: number;\n  color?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n  maxOpacity?: number;\n}\n\nexport const FlickeringGrid: React.FC<FlickeringGridProps> = ({\n  squareSize = 4,\n  gridGap = 6,\n  flickerChance = 0.3,\n  color = \"rgb(0, 0, 0)\",\n  width,\n  height,\n  className,\n  maxOpacity = 0.3,\n  ...props\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isInView, setIsInView] = useState(false);\n  const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 });\n\n  const memoizedColor = useMemo(() => {\n    const toRGBA = (color: string) => {\n      if (typeof window === \"undefined\") {\n        return `rgba(0, 0, 0,`;\n      }\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) return \"rgba(255, 0, 0,\";\n      ctx.fillStyle = color;\n      ctx.fillRect(0, 0, 1, 1);\n      const [r, g, b] = Array.from(ctx.getImageData(0, 0, 1, 1).data);\n      return `rgba(${r}, ${g}, ${b},`;\n    };\n    return toRGBA(color);\n  }, [color]);\n\n  const setupCanvas = useCallback(\n    (canvas: HTMLCanvasElement, width: number, height: number) => {\n      const dpr = window.devicePixelRatio || 1;\n      canvas.width = width * dpr;\n      canvas.height = height * dpr;\n      canvas.style.width = `${width}px`;\n      canvas.style.height = `${height}px`;\n      const cols = Math.floor(width / (squareSize + gridGap));\n      const rows = Math.floor(height / (squareSize + gridGap));\n\n      const squares = new Float32Array(cols * rows);\n      for (let i = 0; i < squares.length; i++) {\n        squares[i] = Math.random() * maxOpacity;\n      }\n\n      return { cols, rows, squares, dpr };\n    },\n    [squareSize, gridGap, maxOpacity],\n  );\n\n  const updateSquares = useCallback(\n    (squares: Float32Array, deltaTime: number) => {\n      for (let i = 0; i < squares.length; i++) {\n        if (Math.random() < flickerChance * deltaTime) {\n          squares[i] = Math.random() * maxOpacity;\n        }\n      }\n    },\n    [flickerChance, maxOpacity],\n  );\n\n  const drawGrid = useCallback(\n    (\n      ctx: CanvasRenderingContext2D,\n      width: number,\n      height: number,\n      cols: number,\n      rows: number,\n      squares: Float32Array,\n      dpr: number,\n    ) => {\n      ctx.clearRect(0, 0, width, height);\n      ctx.fillStyle = \"transparent\";\n      ctx.fillRect(0, 0, width, height);\n\n      for (let i = 0; i < cols; i++) {\n        for (let j = 0; j < rows; j++) {\n          const opacity = squares[i * rows + j];\n          ctx.fillStyle = `${memoizedColor}${opacity})`;\n          ctx.fillRect(\n            i * (squareSize + gridGap) * dpr,\n            j * (squareSize + gridGap) * dpr,\n            squareSize * dpr,\n            squareSize * dpr,\n          );\n        }\n      }\n    },\n    [memoizedColor, squareSize, gridGap],\n  );\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const container = containerRef.current;\n    if (!canvas || !container) return;\n\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n\n    let animationFrameId: number;\n    let gridParams: ReturnType<typeof setupCanvas>;\n\n    const updateCanvasSize = () => {\n      const newWidth = width || container.clientWidth;\n      const newHeight = height || container.clientHeight;\n      setCanvasSize({ width: newWidth, height: newHeight });\n      gridParams = setupCanvas(canvas, newWidth, newHeight);\n    };\n\n    updateCanvasSize();\n\n    let lastTime = 0;\n    const animate = (time: number) => {\n      if (!isInView) return;\n\n      const deltaTime = (time - lastTime) / 1000;\n      lastTime = time;\n\n      updateSquares(gridParams.squares, deltaTime);\n      drawGrid(\n        ctx,\n        canvas.width,\n        canvas.height,\n        gridParams.cols,\n        gridParams.rows,\n        gridParams.squares,\n        gridParams.dpr,\n      );\n      animationFrameId = requestAnimationFrame(animate);\n    };\n\n    const resizeObserver = new ResizeObserver(() => {\n      updateCanvasSize();\n    });\n\n    resizeObserver.observe(container);\n\n    const intersectionObserver = new IntersectionObserver(\n      ([entry]) => {\n        setIsInView(entry.isIntersecting);\n      },\n      { threshold: 0 },\n    );\n\n    intersectionObserver.observe(canvas);\n\n    if (isInView) {\n      animationFrameId = requestAnimationFrame(animate);\n    }\n\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n      resizeObserver.disconnect();\n      intersectionObserver.disconnect();\n    };\n  }, [setupCanvas, updateSquares, drawGrid, width, height, isInView]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={cn(`h-full w-full ${className}`)}\n      {...props}\n    >\n      <canvas\n        ref={canvasRef}\n        className=\"pointer-events-none\"\n        style={{\n          width: canvasSize.width,\n          height: canvasSize.height,\n        }}\n      />\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AAGA;AAHA;;;;AAsBO,MAAM,iBAAgD,CAAC,EAC5D,aAAa,CAAC,EACd,UAAU,CAAC,EACX,gBAAgB,GAAG,EACnB,QAAQ,cAAc,EACtB,KAAK,EACL,MAAM,EACN,SAAS,EACT,aAAa,GAAG,EAChB,GAAG,OACJ;IACC,MAAM,YAAY,CAAA,GAAA,6YAAA,CAAA,SAAM,AAAD,EAAqB;IAC5C,MAAM,eAAe,CAAA,GAAA,6YAAA,CAAA,SAAM,AAAD,EAAkB;IAC5C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6YAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6YAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,OAAO;QAAG,QAAQ;IAAE;IAEnE,MAAM,gBAAgB,CAAA,GAAA,6YAAA,CAAA,UAAO,AAAD,EAAE;QAC5B,MAAM,SAAS,CAAC;YACd,wCAAmC;gBACjC,OAAO,CAAC,aAAa,CAAC;YACxB;;YACA,MAAM;YAEN,MAAM;YAIN,MAAO,eAAG,eAAG;QAEf;QACA,OAAO,OAAO;IAChB,GAAG;QAAC;KAAM;IAEV,MAAM,cAAc,CAAA,GAAA,6YAAA,CAAA,cAAW,AAAD,EAC5B,CAAC,QAA2B,OAAe;QACzC,MAAM,MAAM,OAAO,gBAAgB,IAAI;QACvC,OAAO,KAAK,GAAG,QAAQ;QACvB,OAAO,MAAM,GAAG,SAAS;QACzB,OAAO,KAAK,CAAC,KAAK,GAAG,GAAG,MAAM,EAAE,CAAC;QACjC,OAAO,KAAK,CAAC,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;QACnC,MAAM,OAAO,KAAK,KAAK,CAAC,QAAQ,CAAC,aAAa,OAAO;QACrD,MAAM,OAAO,KAAK,KAAK,CAAC,SAAS,CAAC,aAAa,OAAO;QAEtD,MAAM,UAAU,IAAI,aAAa,OAAO;QACxC,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE,IAAK;YACvC,OAAO,CAAC,EAAE,GAAG,KAAK,MAAM,KAAK;QAC/B;QAEA,OAAO;YAAE;YAAM;YAAM;YAAS;QAAI;IACpC,GACA;QAAC;QAAY;QAAS;KAAW;IAGnC,MAAM,gBAAgB,CAAA,GAAA,6YAAA,CAAA,cAAW,AAAD,EAC9B,CAAC,SAAuB;QACtB,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE,IAAK;YACvC,IAAI,KAAK,MAAM,KAAK,gBAAgB,WAAW;gBAC7C,OAAO,CAAC,EAAE,GAAG,KAAK,MAAM,KAAK;YAC/B;QACF;IACF,GACA;QAAC;QAAe;KAAW;IAG7B,MAAM,WAAW,CAAA,GAAA,6YAAA,CAAA,cAAW,AAAD,EACzB,CACE,KACA,OACA,QACA,MACA,MACA,SACA;QAEA,IAAI,SAAS,CAAC,GAAG,GAAG,OAAO;QAC3B,IAAI,SAAS,GAAG;QAChB,IAAI,QAAQ,CAAC,GAAG,GAAG,OAAO;QAE1B,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,IAAK;YAC7B,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,IAAK;gBAC7B,MAAM,UAAU,OAAO,CAAC,IAAI,OAAO,EAAE;gBACrC,IAAI,SAAS,GAAG,GAAG,gBAAgB,QAAQ,CAAC,CAAC;gBAC7C,IAAI,QAAQ,CACV,IAAI,CAAC,aAAa,OAAO,IAAI,KAC7B,IAAI,CAAC,aAAa,OAAO,IAAI,KAC7B,aAAa,KACb,aAAa;YAEjB;QACF;IACF,GACA;QAAC;QAAe;QAAY;KAAQ;IAGtC,CAAA,GAAA,6YAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAAS,UAAU,OAAO;QAChC,MAAM,YAAY,aAAa,OAAO;QACtC,IAAI,CAAC,UAAU,CAAC,WAAW;QAE3B,MAAM,MAAM,OAAO,UAAU,CAAC;QAC9B,IAAI,CAAC,KAAK;QAEV,IAAI;QACJ,IAAI;QAEJ,MAAM,mBAAmB;YACvB,MAAM,WAAW,SAAS,UAAU,WAAW;YAC/C,MAAM,YAAY,UAAU,UAAU,YAAY;YAClD,cAAc;gBAAE,OAAO;gBAAU,QAAQ;YAAU;YACnD,aAAa,YAAY,QAAQ,UAAU;QAC7C;QAEA;QAEA,IAAI,WAAW;QACf,MAAM,UAAU,CAAC;YACf,IAAI,CAAC,UAAU;YAEf,MAAM,YAAY,CAAC,OAAO,QAAQ,IAAI;YACtC,WAAW;YAEX,cAAc,WAAW,OAAO,EAAE;YAClC,SACE,KACA,OAAO,KAAK,EACZ,OAAO,MAAM,EACb,WAAW,IAAI,EACf,WAAW,IAAI,EACf,WAAW,OAAO,EAClB,WAAW,GAAG;YAEhB,mBAAmB,sBAAsB;QAC3C;QAEA,MAAM,iBAAiB,IAAI,eAAe;YACxC;QACF;QAEA,eAAe,OAAO,CAAC;QAEvB,MAAM,uBAAuB,IAAI,qBAC/B,CAAC,CAAC,MAAM;YACN,YAAY,MAAM,cAAc;QAClC,GACA;YAAE,WAAW;QAAE;QAGjB,qBAAqB,OAAO,CAAC;QAE7B,IAAI,UAAU;YACZ,mBAAmB,sBAAsB;QAC3C;QAEA,OAAO;YACL,qBAAqB;YACrB,eAAe,UAAU;YACzB,qBAAqB,UAAU;QACjC;IACF,GAAG;QAAC;QAAa;QAAe;QAAU;QAAO;QAAQ;KAAS;IAElE,qBACE,sbAAC;QACC,KAAK;QACL,WAAW,GAAG,CAAC,cAAc,EAAE,WAAW;QACzC,GAAG,KAAK;kBAET,cAAA,sbAAC;YACC,KAAK;YACL,WAAU;YACV,OAAO;gBACL,OAAO,WAAW,KAAK;gBACvB,QAAQ,WAAW,MAAM;YAC3B;;;;;;;;;;;AAIR","debugId":null}}]
}